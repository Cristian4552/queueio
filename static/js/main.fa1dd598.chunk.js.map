{"version":3,"sources":["component/navbar-component.js","logo.svg","component/carte-commerce-component.js","container/page-liste-commerces-container.js","component/inscription-client-component.js","container/page-file-attente-container.js","container/page-login-container.js","container/page-inscription-container.js","component/navbar-commercant-component.js","container/page-configuration-commerce-container.js","container/page-statistique-container.js","App.js","reportWebVitals.js","index.js"],"names":["NAVBAR","className","to","id","CARTE_COMMERCE","props","src","logo","alt","width","nom","addresse","nbPersonnesEnFile","tempsAttenteApprox","type","onClick","onClickHandler","PageListeCommerces","useState","search","setSearch","activeFilter","ListeComplete","setListeComplete","maListeCommerces","setMaListeCommerces","useEffect","a","fetchCommerceInfo","fetch","response","json","liste","makeList","fetchData","searchResult","filter","commerce","toLowerCase","includes","filtre_id","commerce_id","console","log","history","push","pathname","state","fetchNombreClientsCommerceId","clients","localStorage","getItem","JSON","parse","client","id_commerce","length","value","placeholder","onChange","e","target","map","index","adresse","INSCRIPTION_CLIENT","commerceId","location","initialFormData","Object","freeze","name","phone","code","formData","setFormData","isValidationMode","setIsValidationMode","onChangeHandler","trim","hidden","htmlFor","aria-describedby","required","preventDefault","sendCode","validateCode","status","sendUserInfo","method","sendData","PageFileAttente","useHistory","userInfo","setClient","setCommerce","setFile","fileInitial","setFileInitial","position","setPosition","setNumeroActuel","keyClient","setKeyClient","fetchFile","concat","undefined","deleteClient","deleteDeLaFile","LoginContainer","email","password","userRetourne","onSubmit","responseLogin","data","then","reponse","alert","PageConfifigurationCommerceContainer","nomDuCommerce","catch","error","maxLength","autoFocus","rows","cols","PageConfigurationCommerceContainer","filtres","setFiltres","isFirstTime","setIsFirstTime","courriel","mot_passe","employe","setEmploye","horaire_ouverture","horaire_fermeture","horaire","setHoraire","horaireBackup","setHoraireBackup","employeBackup","setEmployeBackup","filtreCommerce","setfiltreCommerce","couleur","employee_id","nb_clients_max","horaire_id","nb_minutes_retard","temps_moyen_clients","commerceConfig","setCommerceConfig","commerceConfigBackup","setCommerceConfigBackup","commerceInfo","setCommerceInfo","commerceInfoBackup","setCommerceInfoBackup","fetchCommerceConfig","fetchFiltres","fetchEmploye","fetchHoraire","sendCommerceConfig","sendCommerceInfo","sendHoraire","sendEmployee","substring","employeeMethode","Logo","filtre","nom_filtre","min","max","PageStatistiqueContainer","nb_client_jour","nb_client_mois","nb_client_annee","temp_moyen_attendre","temp_moyen_client_commerce","statInfo","setStatInfo","stats","makeStatInfo","info","App","createBrowserHistory","component","PageInscriptionClient","path","PageLogin","PageInscription","PageCommerceConfig","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa1dd598.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst NAVBAR = () => (\r\n    <div>\r\n        <header className=\"App-header\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\r\n        <Link to=\"/\"className=\"navbar-brand\">\r\n            queue.io\r\n        </Link>  \r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n              <Link to=\"/\"className=\"nav-link\">\r\n                  Accueil - Commerces <span className=\"sr-only\">(current)</span>\r\n              </Link>                \r\n              </li>\r\n              <li className=\"nav-item active\">\r\n              <Link to=\"/login\" className=\"nav-link\">\r\n                Se connecter\r\n              </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n)\r\n\r\nexport default NAVBAR\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react'\r\nimport logo from '../logo.svg';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CARTE_COMMERCE = props => { \r\n\r\n\r\n  return(\r\n      <div>\r\n        <div className=\"card bg-light mb-3\" id=\"carte-commerce\">\r\n          <div className=\"card-header\"><img src={logo} alt=\"Logo\" width=\"100px\"/>{props.nom}</div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Informations utiles</h5>\r\n            <p className=\"card-text\">Addresse: {props.addresse}</p>\r\n            <p className=\"card-text\">Nombre de personnes en file: {props.nbPersonnesEnFile} personnes.</p>\r\n            <p className=\"card-text\">Temps d'attente approximatif: {props.tempsAttenteApprox} minutes.</p>\r\n            {/* <Link to={`/info-client/${props.id}`}> */}\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={() => props.onClickHandler(props.id)}>Prendre un numéro</button>\r\n            {/* </Link> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default CARTE_COMMERCE","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Navbar from \"../component/navbar-component\";\r\nimport CarteCommerce from \"../component/carte-commerce-component\";\r\nimport Filtre from \"../component/filtre-component\";\r\n\r\nfunction PageListeCommerces(props) {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [activeFilter, setActiveFilter] = useState(\"clear\");\r\n\r\n    const [ListeComplete, setListeComplete] = useState([]);\r\n    const [CommerceConfig, setCommerceConfig] = useState([]);\r\n\r\n    const [maListeCommerces, setMaListeCommerces] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\t\t\tawait fetchCommerceInfo();\r\n\t\t}\r\n        fetchData();\r\n\r\n        async function fetchCommerceInfo() {\r\n            const response = await fetch(\"https://queueio.herokuapp.com/\");\r\n            const liste = await response.json();\r\n            setListeComplete(liste);\r\n            makeList(liste);\r\n        }\r\n    }, []);\r\n\r\n    const makeList = (liste) => {\r\n        setMaListeCommerces(liste);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let searchResult = ListeComplete.filter((commerce) =>\r\n            commerce.nom.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        if (activeFilter !== \"clear\"){        \r\n        searchResult = searchResult.filter(\r\n                (commerce) => commerce.filtre_id === activeFilter\r\n            );\r\n        }\r\n        setMaListeCommerces(searchResult);\r\n    }, [search, activeFilter]);\r\n\r\n    const onChangeHandler = (id) => {\r\n        console.log(id);\r\n        setActiveFilter(id);\r\n    };\r\n\r\n    const onClickHandler = id =>{\r\n\r\n        let commerce_id = id\r\n        console.log(commerce_id);\r\n    \r\n        props.history.push({\r\n            pathname: '/info-client',\r\n            state: commerce_id\r\n        })        \r\n    }\r\n\r\n    const fetchNombreClientsCommerceId = (id) => {\r\n        let clients = localStorage.getItem(\"clients\");\r\n        if (clients) {\r\n            clients = JSON.parse(clients).filter(\r\n                (client) => client.id_commerce === id\r\n            );\r\n            return clients.length;\r\n        } else return 0;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1 id=\"bienvenue\">Bienvenue!</h1>\r\n\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"input-recherche\"\r\n                value={search}\r\n                placeholder=\"Rechercher des commerces\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n            ></input>\r\n\r\n            <h1 className=\"liste-commerces\">Liste de commerces</h1>\r\n\r\n            <div className=\"vue-commerces\">\r\n                <div className=\"div-filtre\">\r\n                    {/* <Filtre onChangeHandler={onChangeHandler} /> */}\r\n                </div>\r\n\r\n                <div className=\"conteneur-commerces\">\r\n                    {maListeCommerces.map((commerce, index) => (\r\n                        <CarteCommerce\r\n                            nom={commerce.nom}\r\n                            id={commerce.id}\r\n                            addresse={commerce.adresse}\r\n                            key={`commerce-${index}`}\r\n                            nbPersonnesEnFile={fetchNombreClientsCommerceId(\r\n                                commerce.id\r\n                            )}\r\n                            tempsAttenteApprox={\r\n                                fetchNombreClientsCommerceId(commerce.id) * 5\r\n                            }\r\n                            onClickHandler={onClickHandler}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageListeCommerces;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./navbar-component\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport \"../App.css\";\r\n\r\nfunction INSCRIPTION_CLIENT(props) {\r\n    const commerceId = (props.location && props.location.state) || \"\";\r\n\r\n    const initialFormData = Object.freeze({\r\n        name: \"\",\r\n        phone: \"\",\r\n        commerceId: commerceId,\r\n        code: \"\",\r\n    });\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [isValidationMode, setIsValidationMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(commerceId);\r\n    }, []);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim(),\r\n        });\r\n    };\r\n\r\n    const onClickHandlerSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setIsValidationMode(true);\r\n\r\n        async function sendCode() {\r\n            const response = await fetch(\r\n                `https://queueio.herokuapp.com/envoyerVerification?phonenumber=${formData.phone}&channel=sms`\r\n            );\r\n            const liste = await response.json();\r\n            console.log(liste);\r\n        }\r\n\r\n        sendCode();\r\n    };\r\n\r\n    const onClickHandlerValidate = (e) => {\r\n        e.preventDefault();\r\n\r\n        async function validateCode() {\r\n            const response = await fetch(\r\n                `https://queueio.herokuapp.com/recevoirVerification?phonenumber=${formData.phone}&code=${formData.code}`\r\n            );\r\n            const liste = await response.json();\r\n            console.log(liste);\r\n            return response.status === 200;\r\n        }\r\n\r\n        async function sendData() {\r\n            if (await validateCode()) {\r\n                await sendUserInfo();\r\n                props.history.push({\r\n                    pathname: \"/file-attente\",\r\n                    state: formData,\r\n                });\r\n            }\r\n        }\r\n\r\n        async function sendUserInfo() {\r\n            const response = await fetch(\r\n                \"https://queueio.herokuapp.com/prendreNumero/\" +\r\n                    formData.commerceId +\r\n                    \",\" +\r\n                    formData.phone +\r\n                    \",\" +\r\n                    formData.name,\r\n                {\r\n                    method: \"POST\",\r\n                }\r\n            );\r\n            const liste = await response.json();\r\n            console.log(liste);\r\n        }\r\n\r\n        sendData();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <form className=\"form-client\">\r\n                <div className=\"form-group\" hidden={isValidationMode}>\r\n                    <label htmlFor=\"nomInput\">Entrez votre nom</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"nomInput\"\r\n                        name=\"name\"\r\n                        aria-describedby=\"name\"\r\n                        onChange={onChangeHandler}\r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <div className=\"form-group\" hidden={isValidationMode}>\r\n                    <label htmlFor=\"telephone\">\r\n                        Entrez votre numéro de téléphone\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        id=\"telephone\"\r\n                        name=\"phone\"\r\n                        onChange={onChangeHandler}\r\n                        required\r\n                    ></input>\r\n                </div>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    hidden={isValidationMode}\r\n                    onClick={onClickHandlerSubmit}\r\n                >\r\n                    Se mettre en ligne\r\n                </button>\r\n                <div className=\"form-group\" hidden={!isValidationMode}>\r\n                    <label htmlFor=\"code\">\r\n                        Entrez le code de vérification reçu par SMS\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"code\"\r\n                        name=\"code\"\r\n                        onChange={onChangeHandler}\r\n                    ></input>\r\n                </div>\r\n                <button\r\n                    className=\"btn btn-success\"\r\n                    hidden={!isValidationMode}\r\n                    onClick={onClickHandlerValidate}\r\n                >\r\n                    Valider\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default INSCRIPTION_CLIENT;\r\n","import React, {useEffect, useState} from 'react';\r\nimport '../App.css';\r\nimport Navbar from '../component/navbar-component'\r\n// import ListeCommerce from '../liste-commerces.json'\r\nimport FileAttente from '../file-attente.json'\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nfunction PageFileAttente(props) {\r\n  \r\n  let history = useHistory();\r\n  const userInfo = (props.location && props.location.state) || \"\";\r\n\r\n  const [client, setClient] =  useState({});  \r\n  const [commerce, setCommerce] =  useState({});\r\n  const [file, setFile] =  useState({});\r\n  const [fileInitial, setFileInitial] =  useState({});\r\n  const [position, setPosition] =  useState([]);\r\n  const [numeroActuel, setNumeroActuel] =  useState([]);\r\n  const [keyClient, setKeyClient] =  useState([]);  \r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await fetchCommerceInfo();\r\n      await fetchFile();\r\n\t\t}\r\n\r\n    fetchData();\r\n\r\n\r\n    async function fetchCommerceInfo() {\r\n      const response = await fetch(\r\n          \"https://queueio.herokuapp.com/commerceById/\".concat(userInfo.commerceId)\r\n      );\r\n      const liste = await response.json();\r\n      if (liste !== undefined && liste.length !== 0) {\t\t\t\t\r\n          setCommerce(liste[0]);\r\n      }\r\n    }\r\n\r\n    async function fetchFile() {\r\n      const response = await fetch(\r\n          \"https://queueio.herokuapp.com/redis/listClient/\".concat(userInfo.commerceId)\r\n      );\r\n      const liste = await response.json();\r\n      if (liste !== undefined && liste.length !== 0) {\t\t\r\n          setKeyClient(\"commerce\" + userInfo.commerceId + \"Client\" + liste[liste.length-1]);\t\r\n          setFile(liste);\r\n          setFileInitial(liste);\r\n          setPosition(liste[liste.length-1]);\r\n          setNumeroActuel(liste[0]);\r\n      }\r\n    }\r\n\r\n    setClient(userInfo);\r\n    console.log(userInfo);\r\n\r\n  },[])     \r\n\r\n  const onClickHandler= () =>{\r\n\r\n    console.log(keyClient);\r\n\r\n    async function deleteDeLaFile() {\r\n      await deleteClient();\r\n\t\t}\r\n\r\n    deleteDeLaFile();\r\n\r\n    async function deleteClient() {\r\n      const response = await fetch(\r\n          \"https://queueio.herokuapp.com/deleteClientList/\" + userInfo.commerceId + \",\" + keyClient );\r\n      const liste = await response;\r\n      console.log(liste);\r\n    }\r\n\r\n     history.push('/');\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <Navbar\r\n        />\r\n        <div className='file-attente'>\r\n            <h2>Bienvenue! {client.name} </h2>\r\n            <h3>Vous êtes dans la fille d'attente pour: {commerce.nom}  </h3>\r\n\r\n            <div className=\"card border-info mb-3\" id=\"carte-file-attente\">\r\n                <div className=\"card-header\">Votre fille d'attente</div>\r\n                <div className=\"card-body text-info\">\r\n                    <h5 className=\"card-title\">Votre numéro est le: {position}   </h5>\r\n                    <p className=\"card-text\">Il y a présentement: {fileInitial.length - 1}  personnes devant vous.</p>\r\n                    <p className=\"card-text\">Le temps d'attente est d'environ: {(fileInitial.length-1) * 5} minutes.</p>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={onClickHandler}>Quitter la file d'attente</button>\r\n        </div>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageFileAttente;","import {Link} from 'react-router-dom'\nimport React, { useState, useHistory } from 'react'\nimport { Form, Button } from 'react-bootstrap';\n\nimport Navbar from '../component/navbar-component'\n\nfunction LoginContainer(props) {      \n\n    const initialFormData = Object.freeze({\n        email: \"\",\n        password: \"\"\n    });\n    \n    const [formData, setFormData] = useState(initialFormData);\n    // const [commerceId, setCommerceId] = useState(30);\n    let userRetourne = [];\n\n    const onChangeHandler = e =>{\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n\n    const handleResponse = (response) =>{\n        if (response === undefined || response.length === 0){\n            alert(\"Mauvais email ou mot de passe.\");\n        }\n        else{\n            userRetourne = response[0];\n\n            props.history.push({\n                pathname: '/commerceConfig',\n                state: userRetourne.id\n            })\n        }\n    }\n\n    const onSubmitHandler = e =>{\n        e.preventDefault();\n\n        async function sendData(){\n            const responseLogin = await fetch('https://queueio.herokuapp.com/login/'.concat(formData.email).concat('/').concat(formData.password));\n            const data = await responseLogin.json();\n            return data;\n        }\n        sendData().then(reponse =>{\n            handleResponse(reponse);\n        })      \n\n        \n        // fetch('https://queueio.herokuapp.com/login/'.concat(formData.email).concat('/').concat(formData.password))\n        //     .then(response => response.json())\n        //     .then(data => {\n        //     console.log('Success:', data);\n        //     response = data;\n        //     console.log(response);\n        //     })\n        //     .catch((error) => {\n        //     console.error('Error:', error);\n        // });        \n    }\n\n    return (\n\n        <div>\n            <Navbar/>\n\n            <div className='form-wrapper'>\n                <div id='divFormulaire'>\n                    <form onSubmit={onSubmitHandler} className=\"text-center border border-light p-5\">\n                        <p className=\"h4 mb-4\">Sign in</p>\n                        <div className='email'>\n                            <label htmlFor=\"email\">Email</label>\n                             <input  type='email' className=\"form-control mb-4\" name='email' onChange={onChangeHandler} placeholder=\"Enter email\" />                           \n                        </div>\n                        <div className='password'>\n                            <label htmlFor=\"password\">Password</label>\n                            <input className=\"form-control mb-4\" type='password' name='password' onChange={onChangeHandler} placeholder=\"Enter password\" />                            \n                        </div>\n                        <div className='submit' >\n                            <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Soumettre</button>\n                        </div>\n\n                        <Link to={`/inscription`}>\n                            <button type=\"button\" className=\"btn btn-info btn-block my-4\">S'inscrire</button>\n                        </Link>\n                    </form>\n                </div>\n            </div>\n{/* \n            <div>\n                <h1>Registration Form</h1>\n                <Form className=\"register-form\">\n                    <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter username\"\n                        name=\"username\"\n                    />\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        name=\"email\"\n                    />\n                    </Form.Group>\n                    <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter city\"\n                        name=\"city\"\n                    />\n                    </Form.Group>\n                    <Form.Group controlId=\"phone\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter phone\"\n                        name=\"phone\"\n                    />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                    Register\n                    </Button>\n                </Form>\n            </div> */}\n        </div>\n\n    );\n\n\n}\n\nexport default LoginContainer;\n","import React, { useState } from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport NavBarComponent from '../component/navbar-component'\n\nfunction PageConfifigurationCommerceContainer(props){\n\n    let history = useHistory();\n\n    const initialFormData = Object.freeze({\n        nomDuCommerce: \"\",        \n        adresse: \"\",\n        email: \"\",\n        password: \"\"\n    });\n\n    const [formData, setFormData] = useState(initialFormData);\n\n    const onChangeHandler = e =>{\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n\n    const onSubmitHandler = e =>{\n        e.preventDefault();        \n\n        fetch('https://queueio.herokuapp.com/commerceinscription/'.concat(formData.nomDuCommerce,'/',formData.adresse,'/', formData.email,'/', formData.password),{\n            method: 'POST'\n            })\n            .then(response => response.json())\n            .then(data => {\n            console.log('Success:', data);\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n        });\n\n        history.push(\"/login\")\n\n\n    }\n\n    return (\n        <div>\n            <NavBarComponent/>\n\n            <h1>Inscription</h1>\n\n            <div id='divFormulaire'>\n                <form onSubmit={onSubmitHandler} className=\"text-center border border-light p-5\">\n\n                    <fieldset>\n                        <div className='nomDuCommerce'>\n                            <input className=\"form-control mb-4\" type='text' id=\"nomDuCommerce\" name='nomDuCommerce' placeholder=\"Nom Du Commerce\" required maxLength=\"50\" autoFocus onChange={onChangeHandler} />\n                        </div>\n\n                        {/* <div className='ville'>\n                            <input className=\"form-control mb-4\" type=\"text\" id=\"ville\" placeholder=\"Ville\" name=\"ville\" required=\"required\" maxLength=\"50\" onChange={onChangeHandler} />\n                        </div>\n\n                        <div className='pays'>\n                            <input className=\"form-control mb-4\" type=\"text\" id=\"pays\" placeholder=\"pays\" name=\"pays\" required=\"required\" maxLength=\"50\" onChange={onChangeHandler} />\n                        </div> */}\n\n                        {/* <div className='userPhone'>                           \n                            <input className=\"form-control mb-4\" type=\"tel\" id=\"userPhone\" name=\"userPhone\" placeholder=\"514-888-9999\"\n                                pattern=\"^\\(?\\d{3}\\)?(-| )?\\d{3}(-| )?\\d{4}$\" required=\"required\" onChange={onChangeHandler} />\n                        </div> */}\n\n                        <div className='email'>                            \n                            <input className=\"form-control mb-4\" type='email' name='email' placeholder=\"Enter email\" required onChange={onChangeHandler}/>                         \n                        </div>\n\n                        <div className='password'>\n                            <input className=\"form-control mb-4\" type='password' name='password'  placeholder=\"Enter password\" required onChange={onChangeHandler} />                           \n                        </div>\n\n                        <div className='adresse'>\n                            <label htmlFor=\"story\">Adresse</label>\n                            <textarea className=\"form-control mb-4\" id=\"adresse\"name=\"adresse\" rows=\"3\" cols=\"10\" required onChange={onChangeHandler}>\n                            </textarea>\n                        </div>\n                    </fieldset>\n\n                    <div className='submit'>\n                        <button type=\"submit\" className=\"btn btn-info btn-block my-4\">Soumettre</button>\n                    </div>\n                    <div className='quitter'>\n                        <Link to={`/`}>\n                            <button type=\"submit\" className=\"btn btn-info btn-block my-4\">Quitter</button>\n                        </Link>\n                        \n                    </div>\n                </form>\n            </div>           \n        </div>\n\n    )\n}\n\nexport default PageConfifigurationCommerceContainer\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst NAVBAR = ({commerceId,props}) =>{\r\n\r\n  const onClickHandler = e =>{\r\n\r\n      props.history.push({\r\n        pathname: '/statistique',\r\n        state: commerceId\r\n    })\r\n  }\r\n\r\n  return(\r\n      <div>\r\n          <header className=\"App-header\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\r\n          <Link to=\"/\"className=\"navbar-brand\">\r\n              queue.io\r\n          </Link>  \r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item active\">\r\n                <Link to=\"/CommerceConfig\"className=\"nav-link\">\r\n                    Accueil - Profil <span className=\"sr-only\">(current)</span>\r\n                </Link>                \r\n                </li>\r\n                <li className=\"nav-link active\" id=\"stat-link\" onClick={onClickHandler}>                  \r\n                      Statistiques                  \r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                      Se déconnecter\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default NAVBAR\r\n","import React, { useState, useEffect } from \"react\";\nimport NavBarCommercant from \"../component/navbar-commercant-component\";\nimport Logo from \"../logo.svg\";\nfunction PageConfigurationCommerceContainer(props) {\n    const commerceId = (props.location && props.location.state) || 3;\n\n    const [filtres, setFiltres] = useState([]);\n    const [isFirstTime, setIsFirstTime] = useState(true);\n\tconst [employe, setEmploye] = useState({\n\t\tnom: \"John\",\n\t\tcourriel: \"abc@mail.com\",\n\t\tmot_passe: \"badoing\"\n\t});\n\tconst [horaire, setHoraire] = useState({\n\t\thoraire_ouverture: \"08:00\",\n\t\thoraire_fermeture: \"22:00\"\n\t});\t\n\tconst [horaireBackup, setHoraireBackup] = useState([]);\t// envoyer a l'API quand PUT\n    const [employeBackup, setEmployeBackup] = useState([]); //envoyer a l'API quand PUT\n    const [filtreCommerce, setfiltreCommerce] = useState(\"\"); //envoyer a l'API quand PUT\n\n    const [commerceConfig, setCommerceConfig] = useState({\n        filtre_id: \"1\",\n        couleur: \"#C1BBBA\",\n\t\temployee_id: \"2\",\n\t\tlogo: \"logo\",\n        nb_clients_max: \"10\",\n        horaire_id: \"2\",\n        nb_minutes_retard: \"5\",\n        temps_moyen_clients: \"10\",\n    });\n    const [commerceConfigBackup, setCommerceConfigBackup] = useState({\n        filtre_id: \"1\",\n        couleur: \"#C1BBBA\",\n\t\temployee_id: \"2\",\n\t\tlogo: \"logo\",\n        nb_clients_max: \"10\",\n        horaire_id: \"2\",\n        nb_minutes_retard: \"5\",\n        temps_moyen_clients: \"10\",\n    }); //envoyer a l'API quand PUT\n\n    const [commerceInfo, setCommerceInfo] = useState({\n        nom: \"RBC\",\n        adresse: \"123 rue maisoneyve\",\n        courriel: \"apple@mail.com\",\n        mot_passe: \"apple123\",\n    });\n\n    const [commerceInfoBackup, setCommerceInfoBackup] = useState({\n        nom: \"RBC\",\n        adresse: \"123 rue maisoneyve\",\n        courriel: \"apple@mail.com\",\n        mot_passe: \"apple123\",\n    }); //envoyer a l'API quand PUT\n\n    useEffect(() => {\n        async function fetchData() {\n\t\t\tawait fetchCommerceInfo();\n            await fetchCommerceConfig();\n            await fetchFiltres();\n\t\t\tawait fetchEmploye();\n\t\t\tawait fetchHoraire();\n\t\t}\n\n        fetchData();\n\n        //request for commerce config\n        async function fetchCommerceConfig() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/commerceConfigId/\".concat(\n                    commerceId\n                )\n            );\n            const liste = await response.json();\n            if (liste !== undefined && liste.length !== 0) {\t\t\t\t\n                liste[0].couleur = \"#\".concat(liste[0].couleur);\n                setCommerceConfig(liste[0]);\n\t\t\t\tsetCommerceConfigBackup(liste[0]);\n\t\t\t\tsetfiltreCommerce(liste[0].filtre_id);\n\t\t\t\tsetIsFirstTime(false);\n            }\n        }\n\n        // //request for commerce info\n        async function fetchCommerceInfo() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/commerceById/\".concat(commerceId)\n            );\n            const liste = await response.json();\n            if (liste !== undefined && liste.length !== 0) {\t\t\t\t\n                setCommerceInfo(liste[0]);\n\t\t\t\tsetCommerceInfoBackup(liste[0]);\n\t\t\t}\n        }\n\n        // //   //request for filtres\n        async function fetchFiltres() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/filtre\"\n            );\n            const liste = await response.json();\n            setFiltres(liste);\n        }\n\n        // //   //request for employe\n        async function fetchEmploye() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/employeByIdCommerce/\".concat(\n                    commerceId\n                )\n            );\n\t\t\tconst liste = await response.json();\n\t\t\tif (liste !== undefined && liste.length !== 0) {\t\t\t\t\n                setEmploye(liste[0]);\n            \tsetEmployeBackup(liste[0]);\n\t\t\t}\n            \n\t\t}\n\t\t\n\t\t// //   //request for horaire\n        async function fetchHoraire() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/horaire/\".concat(\n                    commerceId\n                )\n            );\n\t\t\tconst liste = await response.json();\n\t\t\tif (liste !== undefined && liste.length !== 0) {\t\t\t\t\n                setHoraire(liste[0]);\n            \tsetHoraireBackup(liste[0]);\n\t\t\t}\t\t\t\t\t\t\n            \n        }\n\t}, []);\n\n    const onChangeHandler = (e) => {\n        console.log(e.target.name);\n        switch (e.target.name) {\n            case \"nom\":\n            case \"adresse\":\n            case \"courriel\":\n            case \"mot_passe\":\n                setCommerceInfo({\n                    ...commerceInfo,\n                    [e.target.name]: e.target.value\n                });\n                break;\n            case \"filtre_id\":\n\t\t\t\tsetfiltreCommerce(e.target.value);                \n                setCommerceConfig({\n                    ...commerceConfig,\n                    filtre_id: e.target.value\n                });\n                break;\n            case \"couleur\":\n            case \"nb_clients_max\":\n            case \"horaire_id\":\n            case \"nb_minutes_retard\":\n            case \"temps_moyen_clients\":\n                setCommerceConfig({\n                    ...commerceConfig,\n                    [e.target.name]: e.target.value.trim()\n                });\n                break;\n            case \"employe_courriel\":\n                setEmploye({\n                    ...employe,\n                    courriel: e.target.value.trim()\n                });\n                break;\n            case \"employe_mot_passe\":\n                setEmploye({\n                    ...employe,\n                    mot_passe: e.target.value.trim()\n                });\n\t\t\t\tbreak;\n\t\t\tcase \"horaire_ouverture\":\n\t\t\tcase \"horaire_fermeture\":\n\t\t\t\tsetHoraire({\n                    ...horaire,\n                    [e.target.name]: e.target.value.trim()\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n        }\n    };\n\n    const onClickHandler = (e) => {\n        switch (e.target.name) {\n            case \"annuler\":\n\t\t\t\tconsole.log(commerceConfigBackup);\n                setCommerceConfig(commerceConfigBackup);\n\t\t\t\tsetCommerceInfo(commerceInfoBackup);\n\t\t\t\tsetEmploye(employeBackup);\n\t\t\t\tsetHoraire(horaireBackup)\n                console.log(\"btn annuler\");\n\t\t\t\tbreak;\t\n\t\t\tdefault:\n\t\t\t\tbreak;\t\t\t\n        }\n    };\n\n    const onSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(\"commerce info :\" , commerceInfo);\n\t\tconsole.log(\"commerce config :\" , commerceConfig);\n\t\tconsole.log(\"employe :\" , employe);\n\t\tconsole.log(\"horaire :\" , horaire);\n\n\t\tasync function sendData() {\n            await sendCommerceConfig();\n            await sendCommerceInfo();\n            await sendHoraire();\n\t\t\tawait sendEmployee();\n\t\t}\n\t\tconsole.log(isFirstTime);\n\n\t\tsendData();\t\t\n\n        async function sendCommerceConfig() {\t\t\t\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/commerceConfig/\" + commerceConfig.filtre_id + \"/\" + commerceConfig.logo + \"/\" + commerceConfig.couleur.substring(1) + \"/\" + commerceConfig.nb_minutes_retard + \"/\" + commerceConfig.nb_clients_max + \"/\" + commerceConfig.temps_moyen_clients + \"/\" + commerceId, {\n\t\t\t\t\tmethod: isFirstTime ? 'POST' :  'PUT' \n\t\t\t\t}                \n            );\n            const liste = await response.json();\n            console.log(liste);\n\t\t}\n\t\t\n\t\tasync function sendCommerceInfo() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/commerceupdate/\" + commerceInfo.nom + \",\" + commerceInfo.adresse + \",\" + commerceInfo.courriel + \",\" + commerceInfo.mot_passe  + \",\" + commerceId, {\n\t\t\t\t\tmethod: 'PUT'\n\t\t\t\t}                    \n            );\n            const liste = await response.json();\n            console.log(liste);\n\t\t}\n\t\t\n\t\tasync function sendHoraire() {\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/horaire/\" + horaire.horaire_ouverture + \"/\" + horaire.horaire_fermeture + \"/\" + commerceId, {\n\t\t\t\t\tmethod: isFirstTime ? 'POST' :  'PUT'\n\t\t\t\t}          \n            );\n            const liste = await response.json();\n            console.log(liste);\n\t\t}\n\t\t\n\t\tasync function sendEmployee() {\n\t\t\tlet employeeMethode;\n\t\t\tif(isFirstTime){\n\t\t\t\temployeeMethode =  \"employecreation/\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\temployeeMethode =  \"updateemployee/\";\n\t\t\t}\n\t\t\tconsole.log(\"https://queueio.herokuapp.com/\"+ employeeMethode + employe.nom + \"/\"  + employe.courriel + \"/\"  + employe.mot_passe + \"/\"  + commerceId);\n            const response = await fetch(\n                \"https://queueio.herokuapp.com/\"+ employeeMethode + employe.nom + \"/\"  + employe.courriel + \"/\"  + employe.mot_passe + \"/\"  + commerceId, {\n\t\t\t\t\tmethod: isFirstTime ? 'POST' :  'PUT'\n\t\t\t\t}          \n            );\n            const liste = await response.json();\n            console.log(liste);\n        }     \n        \n        alert(\"Les modifications ont été sauvegardées!\");\n\t};\n\t\n\t//https://queueio.herokuapp.com/employeCreation/john/micro@mail.com/123/7\n\t//https://queueio.herokuapp.com/employecreation/John,carr4@mail.com,shopping,8\n\n    return (\n        <div>\n            <NavBarCommercant commerceId={commerceId} props={props} />\n\n            <p>Commerce ID : {commerceId}</p>\n\n            <div id=\"divFormulaire\">\n                <form onSubmit={onSubmitHandler} className=\"form-config\">\n                    <h1>Configuration du Commerce</h1>\n                    <fieldset className=\"fieldset-config\">\n                        <div className=\"logo\">\n                            <img className=\"logo-commerce\" alt=\"\" src={Logo} />\n                        </div>\n\n                        <div className=\"nomDuCommerce\">\n                            <label htmlFor=\"nom\">Nom Du Commerce</label>\n                            <input\n                                className=\"form-control mb-4\"\n                                value={commerceInfo.nom || \"\"}\n                                type=\"text\"\n                                id=\"nomDuCommerce\"\n                                name=\"nom\"\n                                onChange={onChangeHandler}\n                                required=\"required\"\n                                maxLength=\"50\"\n                                autoFocus\n                            />\n                        </div>\n\n                        <div className=\"adresse\">\n                            <label htmlFor=\"adresse\">Adresse</label>\n                            <input\n                                className=\"form-control mb-4\"\n                                id=\"adresse\"\n                                value={commerceInfo.adresse || \"\"}\n                                name=\"adresse\"\n                                maxLength=\"100\"\n                                onChange={onChangeHandler}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"email\">\n                            <label htmlFor=\"courriel\">Email</label>\n                            <input\n                                className=\"form-control mb-4\"\n                                value={commerceInfo.courriel || \"\"}\n                                type=\"email\"\n                                name=\"courriel\"\n                                onChange={onChangeHandler}\n                            />\n                        </div>\n                        <div className=\"password\">\n                            <label htmlFor=\"mot_passe\">Password</label>\n                            <input\n                                className=\"form-control mb-4\"\n                                type=\"text\"\n                                value={commerceInfo.mot_passe || \"\"}\n                                name=\"mot_passe\"\n                                onChange={onChangeHandler}\n                            />\n                        </div>\n\n                        <div className=\"filtre\">\n                            <label htmlFor=\"filtre_id\">\n                                La catégorie de votre commerce\n                            </label>\n                            <select\n                                name=\"filtre_id\"\n                                className=\"form-control mb-4\"\n                                value={filtreCommerce || \"\"}\n                                id=\"filtre\"\n                                onChange={onChangeHandler}>\n                                {filtres.map((filtre, index) => (\n                                    <option key={index} value={filtre.id}>\n                                        {filtre.nom_filtre}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div className=\"color\">\n                            <label htmlFor=\"couleur\">\n                                La couleur thème de votre commerce\n                            </label>\n                            <input\n                                className=\"form-control mb-4\"\n                                type=\"color\"\n                                value={commerceConfig.couleur || \"\"}\n                                name=\"couleur\"\n                                onChange={onChangeHandler}\n                            />\n                        </div>\n\n                        <div className=\"employeeEmail\">\n                            <label htmlFor=\"employee_id\">\n                                Le courriel utilisé pour la connexion de\n                                l'employé\n                            </label>\n                            <input\n                                className=\"form-control mb-4\"\n                                type=\"text\"\n                                value={employe.courriel || \"\"}\n                                name=\"employe_courriel\"\n                                onChange={onChangeHandler}\n                            />\n                        </div>\n\n                        <div className=\"employeePassword\">\n                            <label htmlFor=\"employeePassword\">\n                                Le mot de passe utilisé pour la connexion de\n                                l'employé\n                            </label>\n                            <input\n                                className=\"form-control mb-4\"\n                                type=\"text\"\n                                value={employe.mot_passe || \"\"}\n                                name=\"employe_mot_passe\"\n                                onChange={onChangeHandler}\n                            />\n                        </div>\n\n                        {/* <div className='checkbox'>\n                            <label htmlFor=\"validationClient\">Demander une validation au client(sms)</label>\n                            <input type=\"checkbox\" id=\"validationClient\" name=\"validation\" onChange={onChangeHandler}/>\n                        </div> */}\n\n                        <div className=\"maxClientDansCommerce\">\n                            <label htmlFor=\"nb_clients_max\">\n                                Maximum de clients dans le commerce\n                            </label>\n                            <input\n                                className=\"form-control mb-4\"\n                                type=\"text\"\n                                id=\"maxClientDansCommerce\"\n                                value={commerceConfig.nb_clients_max || \"\"}\n                                name=\"nb_clients_max\"\n                                onChange={onChangeHandler}\n                                required=\"required\"\n                                maxLength=\"50\"\n                            />\n                        </div>\n                        <div className=\"horaireOuverture\">\n                            <label htmlFor=\"horaire_ouverture\">\n                                Horaire d'Ouverture:\n                            </label>\n                            <input\n                                type=\"time\"\n                                className=\"form-control mb-4\"\n                                id=\"horaire_ouverture\"\n                                value={horaire.horaire_ouverture || \"\"}\n                                name=\"horaire_ouverture\"\n                                onChange={onChangeHandler}\n                                min=\"06:00\"\n                                max=\"23:00\"\n                                required\n                            ></input>\n                        </div>\n                        <div className=\"horaire_fermeture\">\n                            <label htmlFor=\"horaire_fermeture\">\n                                Horaire de fermeture:\n                            </label>\n                            <input\n                                type=\"time\"\n                                className=\"form-control mb-4\"\n                                id=\"horaire_fermeture\"\n                                value={horaire.horaire_fermeture || \"\"}\n                                name=\"horaire_fermeture\"\n                                onChange={onChangeHandler}\n                                min=\"06:00\"\n                                max=\"23:00\"\n                                required\n                            ></input>\n                        </div>\n                        <div className=\"maxMinuteRetard\">\n                            <label htmlFor=\"nb_minutes_retard\">\n                                Le temps maximum d'attente de retard (en\n                                minutes)\n                            </label>\n                            <input\n                                type=\"number\"\n                                className=\"form-control mb-4\"\n                                id=\"maxMinuteRetard\"\n                                value={commerceConfig.nb_minutes_retard || \"\"}\n                                min=\"0\"\n                                name=\"nb_minutes_retard\"\n                                onChange={onChangeHandler}\n                                required=\"required\"\n                                maxLength=\"50\"\n                            />\n                        </div>\n\n                        <div className=\"tempsMoyenClient\">\n                            <label htmlFor=\"temps_moyen_clients\">\n                                Le temps moyen qu'un client passe dans le\n                                commerce (en minutes)\n                            </label>\n                            <input\n                                type=\"number\"\n                                className=\"form-control mb-4\"\n                                id=\"tempsMoyenClient\"\n                                value={commerceConfig.temps_moyen_clients || \"\"}\n                                min=\"0\"\n                                name=\"temps_moyen_clients\"\n                                onChange={onChangeHandler}\n                                required=\"required\"\n                                maxLength=\"50\"\n                            />\n                        </div>\n\n                        <div id=\"submit\">\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary btn-lg btn-block\"\n                            >\n                                Sauvegarder les modifications\n                            </button>\n                        </div>\n                    </fieldset>\n                </form>\n\n                <div id=\"quitter\">\n                    <button\n                        className=\"btn btn-secondary btn-lg btn-block\"\n                        name=\"annuler\"\n                        onClick={onClickHandler}\n                    >\n                        Annuler les modifications\n                    </button>\n                </div>\n                <div className=\"bottom-space\">Some text</div>\n            </div>\n        </div>\n    );\n}\n\nexport default PageConfigurationCommerceContainer;\n","import {Link} from 'react-router-dom'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Navbar from '../component/navbar-commercant-component'\r\n\r\nfunction PageStatistiqueContainer(props){  \r\n\r\n    const commerce_id = (props.location && props.location.state) || [];\r\n    \r\n    const [statInfo, setStatInfo] = useState({\r\n        nb_client_jour: \"\",\r\n        nb_client_mois: \"\",\r\n        nb_client_annee: \"\",\r\n        temp_moyen_attendre: \"\",\r\n        temp_moyen_client_commerce: \"\"\r\n    });\r\n\r\n    useEffect(() =>{\r\n        async function fetchData(){\r\n          const response = await fetch('https://queueio.herokuapp.com/commerceStatistiques/'.concat(commerce_id));\r\n          const stats = await response.json();\r\n          return stats\r\n        }\r\n        fetchData().then(stats =>{\r\n            console.log(stats);            \r\n            makeStatInfo(stats[0]);\r\n        })        \r\n    }, [])\r\n\r\n    const makeStatInfo = info =>{\r\n        setStatInfo(info);        \r\n    }\r\n\r\n    const onClickHandler = id =>{\r\n        props.history.push({\r\n            pathname: '/commerceConfig',\r\n            state: commerce_id\r\n        })        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n\r\n            <div className='statistique-wrapper'>\r\n                <p className=\"h4 mb-4\" id=\"message-stat\">Voici votre page de statistiques de votre commerce</p>\r\n\r\n                <div className=\"stat-info\">\r\n                    <ul className=\"list-group\" id=\"texte-stat\">\r\n                        <li className=\"list-group-item\">Moyenne de clients par jour</li>\r\n                        <li className=\"list-group-item\">Moyenne de clients par mois</li>\r\n                        <li className=\"list-group-item\">Moyenne de clients par année</li>\r\n                        <li className=\"list-group-item\">Temps moyen d'attente en file (en minutes)</li>\r\n                        <li className=\"list-group-item\">Temps moyen qu'un client passe dans le commerce (en minutes)</li>\r\n                    </ul>\r\n                    <ul className=\"list-group\" id=\"chiffre-stat\">\r\n                        <li className=\"list-group-item\">{statInfo.nb_client_jour}</li>\r\n                        <li className=\"list-group-item\">{statInfo.nb_client_mois}</li>\r\n                        <li className=\"list-group-item\">{statInfo.nb_client_annee}</li>\r\n                        <li className=\"list-group-item\">{statInfo.temp_moyen_attendre}</li>\r\n                        <li className=\"list-group-item\">{statInfo.temp_moyen_client_commerce}</li>\r\n                    </ul>\r\n                </div>               \r\n                    <button type=\"button\" className=\"btn btn-info btn-block my-4\" id=\"btn-stat\" onClick={onClickHandler}>Retour au profil</button>                           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageStatistiqueContainer;\r\n","import React from 'react'\nimport './App.css'\nimport PageListeCommerces from './container/page-liste-commerces-container'\nimport PageInscriptionClient from'./component/inscription-client-component'\nimport PageFileAttente from './container/page-file-attente-container'\nimport PageLogin from './container/page-login-container'\nimport PageInscription from './container/page-inscription-container'\nimport PageCommerceConfig from './container/page-configuration-commerce-container'\nimport PageStatistiqueContainer from './container/page-statistique-container'\nimport {BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams} from 'react-router-dom'\nimport {createBrowserHistory} from 'history'\n\nfunction App() {\n\n  const history = createBrowserHistory();\n\n  return (\n    <Router history={history}>\n      <div className=\"App\">\n        <Switch>\n          <Route component={PageInscriptionClient} path=\"/info-client\"/>\n\n          <Route component={PageFileAttente} path=\"/file-attente\"/>\n\n          <Route component={PageLogin} path=\"/login\"/>         \n\n          <Route component={PageInscription} path=\"/inscription\"/>\n\n          <Route component={PageCommerceConfig} path=\"/commerceConfig\"/>          \n\n          <Route component={PageStatistiqueContainer} path=\"/statistique\"/>\n\n          <Route component={PageListeCommerces} path=\"/\"/>\n        </Switch>       \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}